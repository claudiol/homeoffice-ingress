# Quarkus configuration file
# key = value
quarkus.http.port=8085
# Datasource
quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/homeofficedb?currentSchema=homeoffice
%test.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/homeofficedb?currentSchema=homeoffice
%prod.quarkus.datasource.jdbc.url=${POSTGRESQL_JDBC_URL}
quarkus.datasource.jdbc.max-size=16
%dev.quarkus.datasource.username=homeofficeuser
%prod.quarkus.datasource.username=${POSTGRESQL_USER}
%dev.quarkus.datasource.password=redhat-21
%prod.quarkus.datasource.password=${POSTGRESQL_PASSWORD}
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.database.generation=drop-and-create

# Logging
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
#quarkus.log.console.format=%-5p [%c{2.}] (%t) %s%e%n
quarkus.log.level=INFO
quarkus.log.category."io.quarkuscoffeeshop".level=DEBUG
quarkus.log.category."org.hibernate".level=DEBUG

### Incoming
mp.messaging.incoming.orders.connector=smallrye-kafka
mp.messaging.incoming.orders.topic=Order.events
mp.messaging.incoming.orders.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%test.mp.messaging.incoming.orders.bootstrap.servers=localhost:9092
mp.messaging.incoming.orders.group.id=homeoffice-ingress
mp.messaging.incoming.orders.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.orders.auto.offset.reset=earliest

### Incoming
mp.messaging.incoming.orders-in.connector=smallrye-kafka
mp.messaging.incoming.orders-in.topic=orders-in
mp.messaging.incoming.orders-in.bootstrap.servers=${KAFKA_BOOTSTRAP_URLS}
%test.mp.messaging.incoming.orders-in.bootstrap.servers=localhost:9092
mp.messaging.incoming.orders-in.group.id=homeoffice-ingress
mp.messaging.incoming.orders-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.orders-in.auto.offset.reset=earliest

# Outgoing - Loyalty
#mp.messaging.outgoing.loyalty.connector=smallrye-kafka
#mp.messaging.outgoing.barista.topic=loyalty
#mp.messaging.outgoing.barista.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer
